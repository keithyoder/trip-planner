= turbo_stream_from "dashboard"

.container-fluid.py-4
  .row.mb-4
    .col-12
      h1.display-5.fw-bold
        i.bi.bi-speedometer2.me-2
        | Live Dashboard
      - if @latest_log
        p.text-muted.mb-0
          | Last update: #{time_ago_in_words(@latest_log.timestamp)} ago
      - else
        p.text-muted.mb-0 No data available

  - if @latest_log
    .row.g-4
      / Map column
      .col-lg-8
        .card.shadow-sm.h-100
          .card-header.bg-white
            h5.mb-0
              i.bi.bi-geo-alt.me-2
              | Current Location
              - if @is_travelling
                span.badge.bg-success.ms-2
                  i.bi.bi-arrow-right-circle.me-1
                  | Moving
              - else
                span.badge.bg-secondary.ms-2
                  i.bi.bi-pause-circle.me-1
                  | Stationary
          .card-body.p-0
            #map style="height: 500px;"

      / Weather data column
      .col-lg-4
        / Temperature card
        .card.shadow-sm.mb-3
          .card-body.text-center
            i.bi.bi-thermometer-half.text-danger style="font-size: 3rem;"
            h2.mt-2.mb-0
              = @latest_log.data['shtc3_temperature']&.round(1) || '--'
              span.fs-4.text-muted Â°C
            p.text-muted.mb-0 Temperature

        / Humidity card
        .card.shadow-sm.mb-3
          .card-body.text-center
            i.bi.bi-droplet.text-primary style="font-size: 3rem;"
            h2.mt-2.mb-0
              = @latest_log.data['shtc3_humidity']&.round(1) || '--'
              span.fs-4.text-muted %
            p.text-muted.mb-0 Humidity

        / Pressure card
        .card.shadow-sm.mb-3
          .card-body.text-center
            i.bi.bi-speedometer.text-info style="font-size: 3rem;"
            h2.mt-2.mb-0
              = @latest_log.data['bmp581_pressure']&.round(1) || '--'
              span.fs-4.text-muted hPa
            p.text-muted.mb-0 Pressure

        / Speed card (if available)
        - if @latest_log.data['gps_speed']
          .card.shadow-sm.mb-3
            .card-body.text-center
              i.bi.bi-speedometer2.text-success style="font-size: 3rem;"
              h2.mt-2.mb-0
                = (@latest_log.data['gps_speed'].to_f * 3.6).round(1)
                span.fs-4.text-muted km/h
              p.text-muted.mb-0 Speed

        / GPS Info card
        - if @latest_log.data['gps_latitude']
          .card.shadow-sm
            .card-body
              h6.card-title GPS Information
              table.table.table-sm.mb-0
                tbody
                  tr
                    td.text-muted Latitude
                    td.text-end = @latest_log.data['gps_latitude']&.round(6)
                  tr
                    td.text-muted Longitude
                    td.text-end = @latest_log.data['gps_longitude']&.round(6)
                  - if @latest_log.data['gps_altitude']
                    tr
                      td.text-muted Altitude
                      td.text-end = "#{@latest_log.data['gps_altitude']&.round(1)} m"
                  - if @latest_log.data['gps_satellites']
                    tr
                      td.text-muted Satellites
                      td.text-end = @latest_log.data['gps_satellites']

  - else
    .row
      .col-12
        .card.shadow-sm.text-center.py-5
          .card-body
            i.bi.bi-exclamation-circle.text-muted style="font-size: 4rem;"
            h3.mt-3.mb-2 No Data Available
            p.text-muted.mb-0 Waiting for telemetry data...

- if @latest_log && @latest_log.data['gps_latitude']
  script
    |
      document.addEventListener('DOMContentLoaded', function() {
        var map = L.map('map').setView([#{@latest_log.data['gps_latitude']}, #{@latest_log.data['gps_longitude']}], 15);
        
        L.tileLayer(
        'https://tiles.stadiamaps.com/tiles/outdoors/{z}/{x}/{y}.png?api_key=50e54c7f-f220-44f9-875c-a0ce16bc63b5',
        {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }
        ).addTo(map);
        
        // Create custom icon
        var customIcon = L.icon({
          iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',
          iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',
          shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png',
          iconSize: [25, 41],
          iconAnchor: [12, 41],
          popupAnchor: [1, -34],
          shadowSize: [41, 41]
        });
        
        var marker = L.marker([#{@latest_log.data['gps_latitude']}, #{@latest_log.data['gps_longitude']}], {icon: customIcon}).addTo(map);
                
        setTimeout(function() { location.reload(); }, 30000);
      });

meta name="turbo-refresh-method" content="morph"
meta name="turbo-refresh-scroll" content="preserve"