p[style="color: green"]
  = notice
.card.col-lg
  = render 'shared/show_header', {object: @route, titulo: "Route #{@route.waypoint_start.name} - #{@route.waypoint_end.name} (#{@route.route_sequence.date.strftime("%a %d %b %Y")})", icon: "fa-route"}
  .card-body
    .row.bg-secondary
      .col-sm.m-1.p-0.bg-transparent.border-0.text-light
          |>  Dawn:
          = @route.waypoint_start.solar_position(@route.route_sequence.date).dawn.strftime("%H:%M")
      .col-sm.m-1.p-0.bg-transparent.border-0.text-light
          |>  Sunrise:
          = @route.waypoint_start.solar_position(@route.route_sequence.date).sunrise.strftime("%H:%M")
      .col-sm.m-1.p-0.bg-transparent.border-0.text-light
          |>  Sunset:
          = @route.waypoint_end.solar_position(@route.route_sequence.date).sunset.strftime("%H:%M")
      .col-sm.m-1.p-0.bg-transparent.border-0.text-light
          |>  Dusk:
          = @route.waypoint_end.solar_position(@route.route_sequence.date).dusk.strftime("%H:%M")
      .col-sm.m-1.p-0.bg-transparent.border-0.text-light
          |>  Day Length:
          = humanize(@route.waypoint_start.solar_position(@route.route_sequence.date).day_length)
    .row.row-cols-1.row-cols-sm-2.row-cols-md-3.row-cols-lg-4.g-4.pt-3
      = render 'shared/field_card', {campo: "Distance", valor: @route.route_sequence.distance&.km.to_s}
      = render 'shared/field_card', {campo: "Driving Time", valor: @route.route_sequence.driving_duration.inspect}
      = render 'shared/field_card', {campo: "Stopped Time", valor: @route.route_sequence.stopped_time.inspect}
      = render 'shared/field_card', {campo: "Total Time", valor: @route.route_sequence.total_duration.inspect}

#steps
  .table-responsive.w-75[style="max-height: 500px; overflow-y: auto;"]
    table.table.table-striped
      thead
        tr 
          th Directions
          th Distance 
          th Speed
          th Time
      tbody
        - @route.waypoints.each do |waypoint|
          tr
            td.table-success[colspan="4"] =waypoint.name
          -if (segment = @route.segments&.shift)
            - segment['steps'].select { |step| step['distance'] > 50 }.each do |step|
              tr 
                td =step['instruction']
                td =Distance.new(step['distance']).km
                td =(step['distance'] * 3.6 / step['duration']).round if step['duration'] > 0
                td =(Time.at(@route.start_time % 86400.0).utc + @route.geom.points[step['way_points'].last].m).strftime("%H:%M")


div[data-controller="routes"]
  #routescontainer[data-routes-target="container" class="h-[25rem] w-50"style="min-height: 500px;" data-lon="34.5" data-lat="-8.5" data-route="#{@route.geom.to_s}"]

= line_chart(@route.elevations.map {|e| [e.distance.km.to_f, e.elevation] }, points: false)
