.container-fluid.py-4
  / Flash notice
  - if notice
    .alert.alert-success.alert-dismissible.fade.show role="alert"
      = notice
      button.btn-close type="button" data-bs-dismiss="alert" aria-label="Close"
  
  .row
    .col-12
      / Route header
      .d-flex.justify-content-between.align-items-center.mb-4
        div
          h1.display-5.fw-bold.mb-1
            i.fa.fa-route.me-2
            = "#{@route.waypoint_start.name} â†’ #{@route.waypoint_end.name}"
          p.text-muted.mb-0 = @route.route_sequence.date.strftime("%A, %B %d, %Y")
        
        .btn-group role="group"
          = link_to edit_trip_route_path(@route.trip, @route), class: "btn btn-outline-primary" do
            i.bi.bi-pencil-square.me-2
            | Edit
          = link_to trip_path(@route.trip), class: "btn btn-outline-secondary" do
            i.bi.bi-arrow-left.me-2
            | Back to Trip
  
  / Solar information banner
  .row.mb-4
    .col-12
      .card.shadow-sm.bg-dark.text-white
        .card-body.py-2
          .row.g-2.text-center
            .col-6.col-md.border-end.border-secondary
              .d-flex.align-items-center.justify-content-center.gap-2
                i.bi.bi-moon-stars.text-info
                div.text-start
                  small.text-white-50.d-block Dawn
                  strong.d-block = @route.waypoint_start.solar_position(@route.route_sequence.date).dawn.strftime("%H:%M")
            .col-6.col-md.border-end.border-secondary
              .d-flex.align-items-center.justify-content-center.gap-2
                i.bi.bi-sunrise.text-warning
                div.text-start
                  small.text-white-50.d-block Sunrise
                  strong.d-block = @route.waypoint_start.solar_position(@route.route_sequence.date).sunrise.strftime("%H:%M")
            .col-6.col-md.border-end.border-secondary
              .d-flex.align-items-center.justify-content-center.gap-2
                i.bi.bi-sunset.text-orange
                div.text-start
                  small.text-white-50.d-block Sunset
                  strong.d-block = @route.waypoint_end.solar_position(@route.route_sequence.date).sunset.strftime("%H:%M")
            .col-6.col-md.border-end.border-secondary
              .d-flex.align-items-center.justify-content-center.gap-2
                i.bi.bi-moon.text-primary
                div.text-start
                  small.text-white-50.d-block Dusk
                  strong.d-block = @route.waypoint_end.solar_position(@route.route_sequence.date).dusk.strftime("%H:%M")
            .col-12.col-md
              .d-flex.align-items-center.justify-content-center.gap-2
                i.bi.bi-sun.text-warning
                div.text-start
                  small.text-white-50.d-block Day Length
                  strong.d-block = humanize(@route.waypoint_start.solar_position(@route.route_sequence.date).day_length)
  
  / Route statistics
  .row.g-4.mb-4
    .col-sm-6.col-lg-3
      .card.shadow-sm.h-100
        .card-body.text-center
          i.bi.bi-sign-turn-right.text-primary.fs-1.mb-2
          h6.text-muted.mb-1 Distance
          h4.mb-0 = @route.route_sequence.distance&.km.to_s
    
    .col-sm-6.col-lg-3
      .card.shadow-sm.h-100
        .card-body.text-center
          i.bi.bi-clock.text-success.fs-1.mb-2
          h6.text-muted.mb-1 Driving Time
          h4.mb-0 = @route.route_sequence.driving_duration.inspect
    
    .col-sm-6.col-lg-3
      .card.shadow-sm.h-100
        .card-body.text-center
          i.bi.bi-pause-circle.text-warning.fs-1.mb-2
          h6.text-muted.mb-1 Stopped Time
          h4.mb-0 = @route.route_sequence.stopped_time.inspect
    
    .col-sm-6.col-lg-3
      .card.shadow-sm.h-100
        .card-body.text-center
          i.bi.bi-hourglass-split.text-info.fs-1.mb-2
          h6.text-muted.mb-1 Total Time
          h4.mb-0 = @route.route_sequence.total_duration.inspect
  
  / Map and directions side by side
  .row.g-4.mb-4
    / Map section
    .col-lg-7
      .card.shadow-sm.h-100
        .card-header.bg-white.border-bottom
          h5.card-title.mb-0
            i.bi.bi-map.me-2
            | Route Map
        .card-body.p-0
          div[data-controller="routes"]
            #routescontainer.w-100[
              data-routes-target="container" 
              style="min-height: 500px; height: 60vh;" 
              data-lon="34.5" 
              data-lat="-8.5" 
              data-route="#{@route.geom.to_s}"
            ]
    
    / Turn-by-turn directions
    .col-lg-5
      .card.shadow-sm.h-100
        .card-header.bg-white.border-bottom
          h5.card-title.mb-0
            i.bi.bi-list-ol.me-2
            | Turn-by-Turn Directions
        .card-body.p-0[style="max-height: 60vh; overflow-y: auto;"]
          table.table.table-sm.table-hover.mb-0
            thead.sticky-top.bg-white
              tr 
                th.border-0 Directions
                th.border-0.text-end Distance 
                th.border-0.text-end Speed
                th.border-0.text-end Time
            tbody
              - @route.waypoints.each do |waypoint|
                tr.table-success
                  td[colspan="4"]
                    i.bi.bi-geo-alt-fill.me-2
                    strong = waypoint.name
                - if (segment = @route.segments&.shift)
                  - segment['steps'].select { |step| step['distance'] > 50 }.each do |step|
                    tr 
                      td 
                        small = step['instruction']
                      td.text-end.text-nowrap
                        small = Distance.new(step['distance']).km
                      td.text-end.text-nowrap
                        - if step['duration'] > 0
                          small = "#{(step['distance'] * 3.6 / step['duration']).round} km/h"
                      td.text-end.text-nowrap
                        small = (Time.at(@route.start_time % 86400.0).utc + @route.geom.points[step['way_points'].last].m).strftime("%H:%M")
  
  / Elevation profile
  .row.mb-4
    .col-12
      .card.shadow-sm
        .card-header.bg-white.border-bottom
          h5.card-title.mb-0
            i.bi.bi-graph-up.me-2
            | Elevation Profile
        .card-body
          = line_chart(@route.elevations.map {|e| [e.distance.km.to_f, e.elevation] }, points: false, library: { scales: { x: { title: { display: true, text: 'Distance (km)' } }, y: { title: { display: true, text: 'Elevation (m)' } } } })
